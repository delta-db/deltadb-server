#!/usr/bin/env node

'use strict';

var program = require('commander'),
  fs = require('fs'),
  config = require('../config'),
  clientConfig = require('deltadb/scripts/config');

// Options
program
  .version(JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version)
  .usage('[options]')
  .option('-p, --port <port>', 'Port. Defaulted to 8090')
  .option('-P, --prefix <prefix>', 'DB name prefix useful for keeping test DB namespaces separate. Defaulted to delta_')
  .parse(process.argv);

// Set configurations

if (program.port) {
  config.vals.url.port = program.port;
  clientConfig.vals.url.port = program.port;
}

if (program.prefix) {
  config.vals.dbNamePrefix = program.prefix;
  clientConfig.vals.dbNamePrefix = program.prefix;
}

// Use env vars for adapter credentials so that they don't appear in process lists
if (process.env.DELTA_ADAPTER) {
  var adapter = config.vals.adapters[process.env.DELTA_ADAPTER];

  if (process.env.DELTA_ADAPTER_HOST) {
    adapter.host = process.env.DELTA_ADAPTER_HOST;
  } else if (process.env.POSTGRES_PORT_5432_TCP_ADDR) {
    adapter.host = process.env.POSTGRES_PORT_5432_TCP_ADDR;
  }

  if (process.env.DELTA_ADAPTER_PORT) {
    adapter.port = process.env.DELTA_ADAPTER_PORT;
  }

  if (process.env.DELTA_ADAPTER_USERNAME) {
    adapter.username = process.env.DELTA_ADAPTER_USERNAME;
  }

  if (process.env.DELTA_ADAPTER_PASSWORD) {
    adapter.password = process.env.DELTA_ADAPTER_PASSWORD;
  }
}

// Start server
var Server = require('../scripts/server');
var server = new Server();
server.start();
